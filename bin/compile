#!/usr/bin/env bash

# bin/compile <build-dir> <cache-dir>

# exit on error and no using undefined vars
set -eu

# config
APR_VERSION="1.5.2"
APACHE_VERSION="2.4.10"
PHP_VERSION="7.0.5"

BIN_DIR=$(dirname $0)
BUILD_DIR=$1
CACHE_DIR=$2

# include .files when moving things around
shopt -s dotglob

cd $BUILD_DIR

APR_URL="http://mirror.cogentco.com/pub/apache/apr/apr-$APR_VERSION.tar.gz"
echo "-----> Downloading APR version $APR_VERSION from $APR_URL"
curl --location --max-time 60 --location "$APR_URL" | tar xz

echo "-----> Building APR version $APR_VERSION"
cd apr-$APR_VERSION
./configure \
  --prefix=/app/apr
make

echo "-----> Installing APR version $APR_VERSION"
make install

APR_UTIL_URL="http://mirror.cogentco.com/pub/apache/apr/apr-util-$APR_VERSION.tar.gz"
echo "-----> Downloading APR-util version $APR_VERSION from $APR_UTIL_URL"
curl --location --max-time 60 --location "$APR_UTIL_URL" | tar xz

echo "-----> Building APR-util version $APR_VERSION"
cd apr-util-$APR_VERSION
./configure /
  --prefix=/app/apr-util /
  --with-apr=/app/apr
make

echo "-----> Installing APR-util version $APR_VERSION"
make install

APACHE_URL="http://mirror.cogentco.com/pub/apache/httpd/httpd-$APACHE_VERSION.tar.gz"
echo "-----> Downloading Apache version $APACHE_VERSION from $APACHE_URL"
curl --location --max-time 60 --location "$APACHE_URL" | tar xz

echo "-----> Building Apache version $APACHE_VERSION"
cd httpd-$APACHE_VERSION
./configure \
  --prefix=/app/apache \
  --sysconfdir=/app/conf \
  --with-apr=/opt/apr/apr-$APR_VERSION \
  --with-apr-util=/opt/apr-util/apr-util-$APR_VERSION
make

echo "-----> Installing Apache version $APR_VERSION"
make install

echo "-----> Test launching Apache version $APACHE_VERSION"
/app/apache/bin/apachectl start

echo "-----> Stopping Apache version $APACHE_VERSION"
/app/apache/bin/apachectl stop

PHP_URL="https://php.net/get/php-$PHP_VERSION.tar.gz/from/this/mirror"
echo "-----> Downloading PHP version $PHP_VERSION from $PHP_URL"
curl --location --max-time 60 --location "$PHP_URL" | tar xz

echo "-----> Building PHP version $PHP_VERSION"
cd php-$PHP_VERSION
# TODO: configureのオプションを確認
./configure \
  --prefix=/app/php \
  --with-config-file-path=/app/conf/php.ini \
  --enable-mbstring \
  --enable-mbregex \
  --enable-zip \
  --enable-bcmath \
  --enable-pcntl \
  --enable-ftp \
  --enable-sockets \
  --enable-exif \
  --enable-calendar \
  --enable-sysvmsg \
  --enable-sysvsem \
  --enable-sysvshm \
  --enable-wddx \
  --with-curl \
  --with-mcrypt \
  --with-iconv \
  --with-gmp \
  --with-pspell \
  --with-gd \
  --with-jpeg-dir=/usr/lib \ # libjpeg
  --with-png-dir=/usr/lib \
  --with-zlib-dir=/usr/lib \
  --with-xpm-dir=/usr/lib \
  --with-freetype-dir=/usr/lib \
  --enable-gd-native-ttf \
  --enable-gd-jis-conv \
  --with-xsl=/usr/lib \
  --with-mcrypt=/usr/lib \
  --with-gettext=/usr/lib \
  --with-openssl=/usr/lib \
  --with-gettext=/usr/lib \
  --with-zlib=/usr/lib \
  --with-bz2=/usr/lib \
  --with-recode=/usr/lib \
make

echo "-----> Installing PHP version $APR_VERSION"
make install

# make php available on bin
mkdir -p bin
ln -s /app/php/bin/php bin/php

cat >>boot.sh <<EOF
for var in \`env|cut -f1 -d=\`; do
  echo "PassEnv \$var" >> /app/apache/conf/httpd.conf;
done
touch /app/apache/logs/error_log
touch /app/apache/logs/access_log
tail -F /app/apache/logs/error_log &
tail -F /app/apache/logs/access_log &
export LD_LIBRARY_PATH=/app/php/ext
echo "Launching apache"
exec /app/apache/bin/apachectl start -DNO_DETACH
EOF

chmod +x boot.sh

# clean the cache
rm -rf $CACHE_DIR/*
